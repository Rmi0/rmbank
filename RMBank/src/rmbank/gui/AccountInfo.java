/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rmbank.gui;

import java.util.ArrayList;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JComboBox;
import rmbank.Account;
import rmbank.Customer;
import rmbank.database.BankDB;

/**
 *
 * @author Rolo
 */
public class AccountInfo extends javax.swing.JPanel {

    /**
     * Creates new form AccountInfo
     */
    private Customer currentCustomer;

    public AccountInfo() {
        this.currentCustomer = null;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        balance = new javax.swing.JLabel();
        blocked = new javax.swing.JLabel();
        accountBox = new javax.swing.JComboBox();
        newAccButton = new javax.swing.JButton();
        fundsField = new javax.swing.JTextField();
        withdrawButton = new javax.swing.JButton();
        depositButton = new javax.swing.JButton();
        toggleBlockedButton = new javax.swing.JButton();

        balance.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        balance.setText("Balance: -----");

        blocked.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        blocked.setText("Blocked: -----");

        accountBox.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        accountBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountBoxActionPerformed(evt);
            }
        });

        newAccButton.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        newAccButton.setText("New Account");
        newAccButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newAccButtonActionPerformed(evt);
            }
        });

        fundsField.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        fundsField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fundsFieldActionPerformed(evt);
            }
        });

        withdrawButton.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        withdrawButton.setText("Withdraw");
        withdrawButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                withdrawButtonActionPerformed(evt);
            }
        });

        depositButton.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        depositButton.setText("Deposit");
        depositButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                depositButtonActionPerformed(evt);
            }
        });

        toggleBlockedButton.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        toggleBlockedButton.setText("Toggle Blocked");
        toggleBlockedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toggleBlockedButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(blocked, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(balance, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(accountBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(newAccButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(fundsField, javax.swing.GroupLayout.DEFAULT_SIZE, 312, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(withdrawButton, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(depositButton, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(toggleBlockedButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(accountBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(newAccButton)
                .addGap(18, 18, 18)
                .addComponent(balance, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(blocked, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fundsField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(withdrawButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(depositButton)
                    .addComponent(toggleBlockedButton))
                .addGap(145, 145, 145))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void newAccButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newAccButtonActionPerformed
        try {
            if (this.currentCustomer == null) {
                return;
            }
            new BankDB().newAccount(this.currentCustomer.getId());
            this.setAccountBox(this.currentCustomer);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_newAccButtonActionPerformed

    private void withdrawButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_withdrawButtonActionPerformed
        if (accountBox.getSelectedItem() == null) return;
        Pattern p = Pattern.compile("^(\\d{1,8}\\.\\d{1,2}|\\d{1,8})$");
        Matcher m = p.matcher(fundsField.getText());
        if (!m.matches()) {
            return;
        }
        double funds = -Double.parseDouble(fundsField.getText());
        try {
            int accNum = (int)accountBox.getSelectedItem();
            new BankDB().changeFunds(accNum, funds);
        } catch (Exception ex) {ex.printStackTrace();}
        Object selectedItem = this.accountBox.getSelectedItem();
        this.setAccountBox(this.currentCustomer);
        this.accountBox.setSelectedItem(selectedItem);
    }//GEN-LAST:event_withdrawButtonActionPerformed

    private void depositButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_depositButtonActionPerformed
        if (accountBox.getSelectedItem() == null) return;
        Pattern p = Pattern.compile("^(\\d{1,8}\\.\\d{1,2}|\\d{1,8})$");
        Matcher m = p.matcher(fundsField.getText());
        if (!m.matches()) {
            return;
        }
        double funds = Double.parseDouble(fundsField.getText());
        try {
            int accNum = (int)accountBox.getSelectedItem();
            new BankDB().changeFunds(accNum, funds);
        } catch (Exception ex) {ex.printStackTrace();}
        Object selectedItem = this.accountBox.getSelectedItem();
        this.setAccountBox(this.currentCustomer);
        this.accountBox.setSelectedItem(selectedItem);
    }//GEN-LAST:event_depositButtonActionPerformed

    private void toggleBlockedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toggleBlockedButtonActionPerformed
        if (accountBox.getSelectedItem() == null) return;
        try {
            int accNum = (int)this.accountBox.getSelectedItem();
            boolean block = this.blocked.getText().split(" ")[1].equals("Yes")?false:true;
        
            new BankDB().setAccountState(accNum, block);
            Object selectedItem = this.accountBox.getSelectedItem();
            this.setAccountBox(this.currentCustomer);
            this.accountBox.setSelectedItem(selectedItem);
        } catch (Exception ex) {ex.printStackTrace();}
    }//GEN-LAST:event_toggleBlockedButtonActionPerformed

    private void fundsFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fundsFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fundsFieldActionPerformed

    private void accountBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accountBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_accountBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox accountBox;
    private javax.swing.JLabel balance;
    private javax.swing.JLabel blocked;
    private javax.swing.JButton depositButton;
    private javax.swing.JTextField fundsField;
    private javax.swing.JButton newAccButton;
    private javax.swing.JButton toggleBlockedButton;
    private javax.swing.JButton withdrawButton;
    // End of variables declaration//GEN-END:variables

    public void setBalance(double balance) {
        this.balance.setText("Balance: " + balance);
    }

    public void setBlocked(boolean blocked) {
        String stringBlocked = blocked == true ? "Yes" : "No";
        this.blocked.setText("Blocked: " + stringBlocked);
    }

    public void setAllMissing() {
        this.balance.setText("Balance: -----");
        this.blocked.setText("Blocked: -----");
    }

    public void setAccountBox(Customer c) {
        List<Account> accounts = new ArrayList<>();
        try {
            accounts = new BankDB().getAccountsByCustomer(c);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        this.currentCustomer = c;
        this.accountBox.removeAllItems();
        for (Account a : accounts) {
            this.accountBox.addItem(a.getNumber());
        }
    }

    public JComboBox getAccountBox() {
        return this.accountBox;
    }

}
